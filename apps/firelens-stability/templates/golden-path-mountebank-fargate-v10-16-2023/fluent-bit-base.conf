[SERVICE]
    # See:
    # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html
    # https://github.com/aws-samples/amazon-ecs-firelens-under-the-hood/tree/master/generated-configs/fluent-bit
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_PORT    2020
    Flush        1
    Grace        30
    Log_Level    info
    storage.path /var/log/flb-storage/
    # Important! This is your memory limiter setting for inputs with storage.type filesystem
    # Total Max Memory Usage <= (2 * # of inputs with filesystem buffer * storage.max_chunks_up * 2 MB per chunk)
    # + (2 * SUM(Each input Mem_Buf_Limit for inputs with memory buffer)
    # This calculation should inform the Fluent Bit container memory limit or reservation.
    # If you switch to default storage.type memory, please carefully read the guide
    # https://github.com/aws-samples/amazon-ecs-firelens-examples/tree/mainline/examples/fluent-bit/oomkill-prevention
    storage.max_chunks_up  32

{{#if definitions.segfault}}
# Artificially trigger a segfault if configured
[INPUT]
    Name      exec
    command   kill -11 `pgrep fluent-bit`
{{/if}}

{{#if definitions.add_forward}}

# This is an artificial forward because my standard out logger was going to some other destination not the cw specified here.
[INPUT]
    Name        forward
    Listen      0.0.0.0
    Port        6270

{{/if}}

[INPUT]
    Name          tcp
    Alias         TCP-ApplicationLogs
    Listen        0.0.0.0

    # Tag used for routing to OUTPUT
    Tag           ApplicationLogs

    # Listen on unused port
    Port          5170

    # Don't parse JSON for performance reasons
    Format        none

    Chunk_Size    32
    Buffer_Size   256
    # If this is set to (default) "storage.type memory" or not configured (memory is default),
    # then Mem_Buf_Limit *should be set*.
    # If this is set to "storage.type filesystem", Mem_Buf_Limit has no effect. It
    # uses the [SERVICE] level "storage.max_chunks_up" configuration instead.
    # https://github.com/aws-samples/amazon-ecs-firelens-examples/tree/mainline/examples/fluent-bit/oomkill-prevention
    storage.type  filesystem

[INPUT]
    Name          tcp
    Alias         TCP-RequestLogs
    Tag           RequestLogs
    Listen        0.0.0.0
    Port          5171
    Format        none
    Chunk_Size    32
    Buffer_Size   256
    # If this is set to (default) "storage.type memory" or not configured (memory is default),
    # then Mem_Buf_Limit *should be set*.
    # If this is set to "storage.type filesystem", Mem_Buf_Limit has no effect. It
    # uses the [SERVICE] level "storage.max_chunks_up" configuration instead.
    storage.type  filesystem

[INPUT]
    Name          tcp
    Alias         TCP-ServiceMetrics
    Tag           ServiceMetrics
    Listen        0.0.0.0
    Port          5172
    Format        none
    Chunk_Size    32
    Buffer_Size   256
    # If this is set to (default) "storage.type memory" or not configured (memory is default),
    # then Mem_Buf_Limit *should be set*.
    # If this is set to "storage.type filesystem", Mem_Buf_Limit has no effect. It
    # uses the [SERVICE] level "storage.max_chunks_up" configuration instead.
    storage.type  filesystem

[OUTPUT]
    # Send any StdOut/StdErr Logs to A CloudWatch Logs Group.
    # FireLens automatically tags them to {container name}-firelens-{task ID}.
    Name                cloudwatch_logs
    Alias               CloudWatch-AppContainer-STDOUT
    Match               Application-firelens-*
    region              ${LOG_REGION}
    log_group_name      {{ServiceName}}-${STAGE}-AppContainer-STDOUT
    log_stream_prefix   STDOUT-${HOSTNAME}
    auto_create_group   {{definitions.cw_auto_create_group}}
    retry_limit         3
    endpoint            ${CLOUDWATCH_ENDPOINT}
{{#if definitions.is_golden_revision_applied}}
    net.keepalive_idle_timeout   4
{{/if}}
{{#if definitions.cw_use_mock}}
    tls.verify false
    port 4545
{{/if}}

[OUTPUT]
    # Send any Application Logs to A CloudWatch Logs Group
    Name                cloudwatch_logs
    Alias               CloudWatch-ApplicationLogs
    Match               ApplicationLogs
    region              ${LOG_REGION}
    log_group_name      {{ServiceName}}-${STAGE}-ApplicationLogs
    log_stream_prefix   ApplicationLogs-${HOSTNAME}
    log_key             log
    auto_create_group   {{definitions.cw_auto_create_group}}
    retry_limit         3
    endpoint            ${CLOUDWATCH_ENDPOINT}
{{#if definitions.is_golden_revision_applied}}
    storage.total_limit_size     2G
    net.keepalive_idle_timeout   4
{{/if}}
{{#if definitions.cw_use_mock}}
    tls.verify false
    port 4545
{{/if}}


[OUTPUT]
    # Send any Request Logs to A CloudWatch Logs Group
    Name                cloudwatch_logs
    Alias               CloudWatch-RequestLogs
    Match               RequestLogs
    region              ${LOG_REGION}
    log_group_name      {{ServiceName}}-${STAGE}-RequestLogs
    log_stream_prefix   RequestLogs-${HOSTNAME}
    log_key             log
    auto_create_group   {{definitions.cw_auto_create_group}}
    retry_limit         3
    endpoint            ${CLOUDWATCH_ENDPOINT}
{{#if definitions.is_golden_revision_applied}}
    storage.total_limit_size     2G
    net.keepalive_idle_timeout   4
{{/if}}
{{#if definitions.cw_use_mock}}
    tls.verify false
    port 4545
{{/if}}
